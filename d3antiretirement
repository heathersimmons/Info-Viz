<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Anti Retirement Calculator</title>
		<script type="text/javascript" src="d3/d3.v3.js"></script>
		<style type="text/css">
			rect {
				fill: gray;
				stroke: none;
			}	
			rect.girlhighlight {
				fill: pink;
			}
			h2{
			color:#039;	
			}
			
		</style>
        
        <h2 align="center">Anti-Retirement Plan<h2>
	</head>
	<body>
    
    <button id="sortButton">Sort Data</button>
    
		<script type="text/javascript">

			//Width and height
			var w = 600;
			var h = 250;
			
			var dataset = [13,23,6,9];
			

			var xScale = d3.scale.ordinal()
							.domain(d3.range(dataset.length))
							.rangeRoundBands([0, w], 0.05);

			var yScale = d3.scale.linear()
							.domain([0, d3.max(dataset)])
							.range([0, h-100]);
			
			//Create SVG element
			var svg = d3.select("body")
						.append("svg")
						.attr("width", w)
						.attr("height", h);

			//Create bars
			svg.selectAll("rect")
			   .data(dataset)
			   .enter()
			   .append("rect")
			   .attr("x", function(d, i) {
			   		return xScale(i);
			   })
			   .attr("y", function(d) {
			   		return h - yScale(d);
			   })
			   .attr("width", xScale.rangeBand())
			   .attr("height", function(d) {
			   		return yScale(d);
			   })
			   
			  
			   .on("mouseover", function() {
						
					d3.select(this).classed("girlhighlight", true);
				})
				.on("mouseout", function() {
					d3.select(this).classed("girlhighlight", false);
				})
				
			//Create labels
			svg.selectAll("text")
			   .data(dataset)
			   .enter()
			   .append("text")
			   .text(function(d) {
			   		return d;
			   })
			   .attr("text-anchor", "middle")
			   .attr("x", function(d, i) {
			   		return xScale(i) + xScale.rangeBand() / 2;
			   })
			   .attr("y", function(d) {
			   		return h - yScale(d) + 20;
			   })
			   .attr("font-family", "sans-serif")
			   .attr("font-size", "20px")
			   .attr("fill", "white");
			   
			   d3.select('button#sortButton') //activates the sort button
    		  .on("click",function(){
           	 sortChart();
      			});
	  
	var sortOrder = false;
	var sortChart = function() {
	 sortOrder = !sortOrder;

       svg.selectAll("rect")
       .sort(function(a, b) {
       if (sortOrder) {
        return d3.ascending(a, b);
        				} else {
        return d3.descending(a, b);
        						}
         })
        .transition()
        .duration(1000)
        .attr("x", function(d, i) {
         return xScale(i);
         });
		 
		 svg.selectAll("text")
		 	.sort(function(a, b) {
       if (sortOrder) {
        return d3.ascending(a, b);
        				} else {
        return d3.descending(a, b);
        						}
         })
        .transition()
        .duration(1000)
        .attr("text-anchor", "middle")
			   .attr("x", function(d, i) {
			   		return xScale(i) + xScale.rangeBand() / 2;
			   })
			   .attr("y", function(d) {
			   		return h - yScale(d) + 20;
			   });	
    }

		</script>
	</body>
</html>
